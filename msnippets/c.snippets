priority -10

snippet Inc "#include local header (Inc)"
#include "${1:`!p snip.rv = snip.basename`}.h"
endsnippet

snippet inc "#include <> (inc)"
#include <${1:stdio}.h>
endsnippet

snippet once "Include header once only guard"
#ifndef ${1:`!p
if not snip.c:
	import random, string
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	snip.rv = ('%s' % (name)).upper()
else:
	snip.rv = snip.c`}
#define $1
${0}
#endif /* end of include guard: $1 */
endsnippet

snippet dbg
IDEBUG("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet idebug "debug macro"
#ifdef NDEBUG
#define idebug(format...)
#else
#define idebug(format, ...) do { \
	fprintf(stderr, "[\033[33mDEBUG\033[m]%s %s(Line %d): ",__FILE__,__FUNCTION__,__LINE__); \
	fprintf(stderr, format, __VA_ARGS__); \
} while(0)
#endif
endsnippet

# vim:ft=snippets:
